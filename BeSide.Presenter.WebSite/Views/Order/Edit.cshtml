@using BeSide.Common.Entities
@using BeSide.Presenter.WebSite.Models.Category
@using BeSide.Presenter.WebSite.Models.Service
@model BeSide.Presenter.WebSite.Models.Order.OrderViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="site-section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-10">
                <div class="form-wrap">
                    @using (Html.BeginForm("Edit", "Order", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <h4>Добавление заказа</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                        <div class="form-group col-md-10">
                            @Html.LabelFor(model => model.ServiceId, new { @class = "col-md-3" })
                            <select name="ServiceId" class="form-control" id="searchSelect">
                                @foreach (CategoryViewModel category in ViewBag.Categoryes)
                                {
                                <optgroup label="@category.Name">
                                    @foreach (ServiceViewModel service in category.ServiceViewModels)
                                    {
                                        if (service.Id == Model.ServiceId)
                                        {
                                            <option value="@service.Id" selected="">@service.Name</option>
                                            continue;
                                        }

                                        <option value="@service.Id">@service.Name</option>
                                    }
                                </optgroup>
                                }
                            </select>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ShortDescription, new { @class = "col-md-3" })
                            <div class="col-md-10">
                                <input type="text" name="ShortDescription" class="form-control" maxlength="100" required autocomplete="off" value="@Model.ShortDescription"/>
                                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FullDescription, htmlAttributes: new { @class = "col-md-3" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.FullDescription, new { @class = "form-control", id = "exampleFormControlTextarea1", rows = 5, maxlength = "1000" })
                                @Html.ValidationMessageFor(model => model.FullDescription, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row ml-1">
                            @Html.LabelFor(model => model.NameProvider, new { @class = "col-md-1" })
                            <div class="col-md-2">
                                <input type="text" name="NameProvider" class="form-control" maxlength="50" required autocomplete="off" value="@Model.NameProvider"/>
                                @Html.ValidationMessageFor(model => model.NameProvider, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.Price, new { @class = "col-md-1" })
                            <div class="col-md-2">
                                <input type="number" min=0 max="1000000" name="Price" class="form-control" autocomplete="off" step="0.01" value="@Model.Price"/>
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>


                            <div class="col-md-3 form-check">
                                @Html.LabelFor(model => model.ContractPrice, new { @class = "col-md-3" })
                                @Html.CheckBoxFor(model => model.ContractPrice, new { @class = "float-right" })
                                @Html.ValidationMessageFor(model => model.ContractPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Deadline, new { @class = "col-md-3" })
                            <div class="col-md-10">
                                <input type="text" id='datetimepicker' data-toggle="datepicker" name="Deadline" class="form-control" min="@DateTime.Now.Date.ToString("yyyy-MM-dd")" required autocomplete="off" value="@Model.Deadline"/>
                                @Html.ValidationMessageFor(model => model.Deadline, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.City, new { @class = "col-md-2" })
                            <div class="col-md-10">
                                <input type="text" name="City" maxlength="40" required class="form-control" value="@Model.City"/>
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.HiddenFor(m => m.ClientProfileId)
                                @Html.HiddenFor(m => m.CreateDate)
                                @Html.HiddenFor(m => m.OrderStatus)
                                @Html.HiddenFor(m => m.ProviderProfileId)
                                @Html.HiddenFor(m => m.Id)
                                <input type="submit" value="Изменить" class="btn btn-primary"/>
                                @Html.RouteLink("Отменить",
                                    new {controller = "Account", action = "UserOrders"},
                                    new {@class = "btn btn-primary"})
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>
